The cache I use here is a linked list with nodes containing the keys of each value. I also have a cache_map that is a
map of key:value pairs that I use to store the values I'm setting. When I need to get a value, if that key exists in
the map, I add the key to the cache, and return the value. When adding the key to the cache I check that the size has not
exceeded the capacity yet- if it has, I remove the head of the cache (head being, the oldest added element).

The time complexity should be O(n), because while I use a linked list I never loop through it, and each value in the map
is retrieved by using the key.
